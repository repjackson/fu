template(name='modules')
    .ui.container
        .ui.stackable.grid
            .twelve.wide.column
                h1.ui.horizontal.divider.header modules
                // .ui.cards
                .ui.relaxed.divided.items
                    each modules
                        +module_item
            .four.wide.column
                if currentUser
                    #add_module.ui.large.basic.fluid.button
                        i.plus.icon
                        |add module


            
template(name='module_card')
    .card
        .content
            if is_completed
                i.right.floated.green.check.large.icon
            .header #{title}
            .description
                a.ui.basic.button(href="/module/admin_view/#{_id}") 
                    |admin
                    i.arrow.right.icon
                a.ui.basic.button(href="/module/study/#{_id}") 
                    |study
                    i.arrow.right.icon


template(name='edit_module')
    with module
        .ui.container
            .ui.center.aligned.header edit module
            .ui.form
                .field
                    label title
                    input#title(type='text' value=title)
                .field
                    label number
                    input#number(type='text' value=number)
            .ui.center.aligned.basic.segment
                    #save_module.ui.huge.green.button save
                    #delete_module.ui.red.button delete

template(name='module_admin_page')
    .ui.container
        with module_ob
            a(href="/course/view/#{course_id}").ui.basic.button
                i.left.arrow.icon
                |back to course
            h1.ui.header #{number}: #{title}
            h2.ui.header course: #{course.title}
            .ui.stackable.grid
                .twelve.wide.column
                    #add_question.ui.basic.button
                        i.plus.icon
                        |add question
                    .ui.items
                        each questions
                            +question_item
                .four.wide.column
                    each tags
                        .ui.basic.label #{this}
                    if can_edit
                        a(href="/module/edit/#{_id}").ui.basic.fluid.button edit
                    a(href="/module/study/#{_id}").ui.large.fluid.basic.button study

template(name='study_module')
    .ui.text.container
        a.ui.basic.button(href="/module/admin_view/#{module._id}") 
            i.left.arrow.icon
            |back to #{module.title} admin
        unless answered_all
            each unanswered_questions
                +unanswered_question
        else
            +study_results
            
template(name='study_results')
    .ui.header right #{right_count}
    .ui.header wrong #{wrong_count}
    if wrong_count
        #do_over.ui.basic.button do over
    else
        #congrats.ui.basic.button congrats, back to course
        #do_over.ui.basic.button do over anyway
            
            
template(name='unanswered_question')
    .ui.text.container
        if can_edit
            a(href="/question/edit/#{_id}").ui.basic.button 
                i.configure.icon
                |edit question
        .ui.padded.segment
            |!{text}
            .ui.divider
            each answers
                .pick_answer.ui.big.basic.button(class=answer_class) #{answer}
                if selected_answer
                    .ui.header #{response}
                .ui.hidden.divider
            if is_answered
                #next.ui.basic.button
                    |next
                    i.right.arrow.icon
